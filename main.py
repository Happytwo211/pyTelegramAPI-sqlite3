import telebot
import sqlite3
from keyboards import (start_keyboard, departure_cities_keyboard, arrival_cities_keyboard, adult_tourists, kids_tourists,
                       stars_hotel, dinner_quantity, days_long, peiod, yes_or_no_keyboard,
                       user_contancts, get_phone)
from token_ import TOKEN

connection = sqlite3.connect('users_data.sqlite3', check_same_thread=False)
cursor = connection.cursor()


bot = telebot.TeleBot(TOKEN)

user_data = []


#commands
@bot.message_handler(commands=['start'])
def handle_start(message):

    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}'
                                      f'\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ —Ç—É—Ä!', reply_markup=start_keyboard())
    global user_name
    user_name = message.from_user.first_name
    return user_name

#calldata
@bot.callback_query_handler(func=lambda call: call.data in ['get_tour'])
def handle_callback_get_tour(call):
    message = call.message
    bot.send_message(message.chat.id, f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞?'
                                      f'\n‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 12%', reply_markup=departure_cities_keyboard())


#CALLBACK_DEPARTURE_CITIES
@bot.callback_query_handler(func=lambda call: call.data in ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ï–∫–∞—Ç–µ—Ä–µ–Ω–±—É—Ä–≥',
                                                            '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ö–∞–∑–∞–Ω—å', '–î—Ä—É–≥–æ–µ'])
def handle_callback_cities(call):
    bot.edit_message_text(
        f'–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å? \n ‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 25%',
        call.message.chat.id, call.message.message_id, reply_markup=arrival_cities_keyboard()
    )
    global departure_city
    departure_city = call.data
    user_data.append(f'–ì–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞ - {departure_city}')
    return departure_city


@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_arrival_cities'])
def handle_callback_departure_main_menu_(call):
    bot.edit_message_text(
        f'–í–∞—à –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞?'
        f'\n‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 12%', call.message.chat.id, call.message.message_id,
        reply_markup=departure_cities_keyboard()
    )
    try:
        user_data.pop()
    except IndexError:
        pass

#CALLDATA_ARRIVAL_CITIES
@bot.callback_query_handler(func=lambda call: call.data in ['–¢—É—Ä—Ü–∏—è', '–ï–≥–∏–ø–µ—Ç', '–û–ê–≠',
                                                            '–†–æ—Å—Å–∏—è', '–¢–∞–∏–ª–∞–Ω–¥', '–ö–∏—Ç–∞–π',
                                                            '–ú–∞–ª—å–¥–∏–≤—ã', '–°–µ–π—à–µ–ª—ã'])
def handle_callback_arrival_cities(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤\n‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 38%',
        call.message.chat.id, call.message.message_id, reply_markup=adult_tourists()

    )
    global arrive_city
    arrive_city = call.data
    user_data.append(f'–ì–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞  -{arrive_city}')
    return arrive_city

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_adult_tourist'])
def handle_main_menu_adult_tourist(call):
    bot.edit_message_text(
        f'–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å? \n ‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 25%',
        call.message.chat.id, call.message.message_id, reply_markup=arrival_cities_keyboard()
    )
    try:
        user_data.pop()
    except IndexError:
        pass


#CALLBACK_ADULTS_TOURIST
@bot.callback_query_handler(func=lambda call: call.data in ['üë§', 'üë§üë§', 'üë§üë§üë§', 'üë§üë§üë§üë§', 'üë§üë§üë§üë§üë§', '–î—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ' ])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí 50%',
        call.message.chat.id, call.message.message_id, reply_markup=kids_tourists()

    )
    adult_persons = call.data
    user_data.append(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö - {adult_persons}')
    return adult_persons

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_kids_tourist'])
def handle_main_menu_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤\n‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 38%',
        call.message.chat.id, call.message.message_id, reply_markup=adult_tourists()

    )
    try:
        user_data.pop()
    except IndexError:
        pass



#CALLBACK_KIDS_TOURIST
@bot.callback_query_handler(func=lambda call: call.data in ['üë∂', 'üë∂üë∂', 'üë∂üë∂üë∂', 'üë∂üë∂üë∂üë∂', '–±–µ–∑ –¥–µ—Ç–µ–π', '–î—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∏' ])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –æ—Ç–µ–ª—è\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí 62%',
        call.message.chat.id, call.message.message_id, reply_markup=stars_hotel()

    )
    children = call.data
    user_data.append(f'–ö–æ–ª–∏—á–µ—Å–≤—Ç–æ –¥–µ—Ç–µ–π - {children}')
    return children

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_stars_hotel'])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí 50%',
        call.message.chat.id, call.message.message_id, reply_markup=kids_tourists()

    )
    try:
        user_data.pop()
    except IndexError:
        pass

#CALLBACK_DINERS
@bot.callback_query_handler(func=lambda call: call.data in ['‚≠êÔ∏è', '‚≠êÔ∏è‚≠êÔ∏è', '‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è', '‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è', '‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è'])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí 75%',
        call.message.chat.id, call.message.message_id, reply_markup=dinner_quantity()

    )
    stars = call.data
    user_data.append(f'–ö–æ–ª–∏—á–µ—Å–≤—Ç–æ –∑–≤–µ–∑–¥ - {stars}')
    return stars

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_dinner'])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –æ—Ç–µ–ª—è\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí 62%',
        call.message.chat.id, call.message.message_id, reply_markup=stars_hotel()

    )
    try:
        user_data.pop()
    except IndexError:
        pass


#CAllBACK DINERS

@bot.callback_query_handler(func=lambda call: call.data in ['–í—Å–µ –≤–∫–ª—é—á–µ–Ω–æ', '–ó–∞–≤—Ç—Ä–∞–∫', '–ó–∞–≤—Ç—Ä–∞–∫ –∏ —É–∂–∏–Ω', '–ó–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥ –∏ —É–∂–∏–Ω'])
def handle_days_long(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –¥–Ω–µ–π\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí  88%',
        call.message.chat.id, call.message.message_id, reply_markup=days_long()

    )
    eat_plan = call.data
    user_data.append(f'–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è -{eat_plan}')
    return eat_plan

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_days_long'])
def handle_adult_tourist(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí 75%',
        call.message.chat.id, call.message.message_id, reply_markup=dinner_quantity()

    )
    try:
        user_data.pop()
    except IndexError:
        pass


#CALLBACK DAYS LONG
@bot.callback_query_handler(func=lambda call: call.data in ['7-9', '10-12','13-15'])
def handle_days_long(call):
    bot.edit_message_text(
        '–í –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É?\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100%',
        call.message.chat.id, call.message.message_id, reply_markup=peiod()

    )
    days = call.data
    user_data.append(f'–ö–æ–ª–∏—á–µ—Å–≤—Ç–æ –¥–Ω–µ–π -{days}')
    return days

@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_days_long'])
def handle_days_long(call):
    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –¥–Ω–µ–π\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí  88%',
        call.message.chat.id, call.message.message_id, reply_markup=days_long()

    )
    try:
        user_data.pop()
    except IndexError:
        pass

#CALLBACK PEDIOD

@bot.callback_query_handler(func=lambda call: call.data in ['—è–Ω–≤-—Ñ–µ–≤', '–º–∞—Ä—Ç-–º–∞–π','–∏—é–Ω—å-–∞–≤–≥—É—Å—Ç', '—Å–µ–Ω—Ç-–æ–∫—Ç', '–Ω–æ—è–±—Ä—å-–¥–µ–∫'])
def handle_days_long(call):
    bot.edit_message_text(
        f'–í—Å–µ –≥–æ—Ç–æ–≤–æ!'
        f'\n–ü—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
        call.message.chat.id, call.message.message_id

    )

    peiod_= call.data
    user_data.append(f'–ü–µ—Ä–∏–æ–¥ –æ—Ç–¥—ã—Ö–∞ - {peiod_}')


    message = call.message
    for data in user_data:
        bot.send_message(message.chat.id, f'{data}')

    #TEST IS OK#
    cursor.execute('INSERT INTO users_data (user_name, departure_city, arrive_city, '
                   'adult_persons, children, start, eat_plan, days, period) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)', (user_name ,departure_city,arrive_city ,
                                                                                                                  'test2','test2','test2',
                                                                                                                  'test','test', peiod_))
    connection.commit()

    # global user_db_data
    # user_db_data = user_data[:]
    user_data.clear()

    bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?', reply_markup=yes_or_no_keyboard())
    return peiod_
@bot.callback_query_handler(func=lambda call: call.data in ['main_menu_period'])
def handle_days_long(call):
    bot.edit_message_text(
        '–í –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É?\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100%',
        call.message.chat.id, call.message.message_id, reply_markup=peiod()

    )
    try:
        user_data.pop()
    except IndexError:
        pass


@bot.callback_query_handler(func=lambda call: call.data in ['–î–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã'])
def correct(call):
    global message_id
    message_id = bot.edit_message_text(
        '–ö–∞–∫ –º–æ–∂–Ω–æ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?',
        call.message.chat.id, call.message.message_id, reply_markup=user_contancts()
    )

@bot.callback_query_handler(func=lambda call: call.data in ['–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≥–æ'])
def incorrect(call):
    message = call.message
    bot.edit_message_text(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}'
                                      f'\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ —Ç—É—Ä!', call.message.chat.id, call.message.message_id,
                          reply_markup=start_keyboard())



user_tg_contacts=[]

@bot.callback_query_handler(func=lambda call: call.data in ['telegram'])
def telegram(call):
    message = call.message
    bot.edit_message_text( f'–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–∏–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º',call.message.chat.id, call.message.message_id)
    bot.register_next_step_handler(message, username_tg)





@bot.callback_query_handler(func=lambda call: call.data in ['whatsapp'])
def telegram(call):
    message = call.message
    bot.edit_message_text( f'–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–∏–∫ –≤ whatsapp',call.message.chat.id, call.message.message_id)
    bot.register_next_step_handler(message, username_whatsapp)


@bot.callback_query_handler(func=lambda call: call.data in ['number'])
def telegram(call):
    message = call.message
    msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
                                      f'\n–ò–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É!', reply_markup=get_phone())

    bot.register_next_step_handler(msg, phone_number)
def phone_number(message):
    bot.send_message(message.chat.id, f'–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –Ω–æ–º–µ—Ä—É '
                                      f'\n{message.contact.phone_number}')
    # print(message.contact.phone_number)
def username_tg(message):
    user_tg_contacts.append(f'–ù–∏–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ - {message.text}')
    bot.send_message(message.chat.id, f'–°–ø–µ—Ü–∏–∞–ª—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º '
                                      f'\n –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç-<b>{message.text}</b>', parse_mode='HTML')
    user_tg_contacts.clear()

def username_whatsapp(message):
    user_tg_contacts.append(f'–ù–∏–∫ –≤ whatsapp - {message.text}')
    bot.send_message(message.chat.id, f'–°–ø–µ—Ü–∏–∞–ª—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ whatsapp'
                                      f'\n–≤–∞—à –∞–∫–∫–∞—É–Ω—Ç-<b>{message.text}</b>', parse_mode='HTML')
    user_tg_contacts.clear()


# connection.commit()
# connection.close()


if __name__ == "__main__":
    bot.polling(none_stop=True)

